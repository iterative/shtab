name: Test
on:
  push:
  pull_request:
  schedule:
  - cron: '0 9 * * 1'  # M H d m w (Mondays at 9:00)
jobs:
  check:
    if: startsWith(github.ref, 'refs/tags') || github.event_name == 'pull_request' || github.repository_owner != 'iterative'
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
    - name: set PYSHA
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - run: pip install -U pre-commit
    - uses: reviewdog/action-setup@v1
    - if: github.event_name != 'schedule'
      run: |
        if [[ $EVENT == pull_request ]]; then
          REPORTER=github-pr-review
        else
          REPORTER=github-check
        fi
        pre-commit run -a todo | reviewdog -efm="%f:%l: %m" -name=TODO -tee -reporter=$REPORTER -filter-mode nofilter
        pre-commit run -a flake8 | reviewdog -f=pep8 -name=flake8 -tee -reporter=$REPORTER -filter-mode nofilter
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: pre-commit run -a --show-diff-on-failure
  test:
    if: startsWith(github.ref, 'refs/tags') || github.event_name == 'pull_request' || github.repository_owner != 'iterative'
    name: Test py${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [2.7, 3.6, 3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - run: pip install -U -r requirements-dev.txt
    - run: pytest
    - uses: codecov/codecov-action@v1
  deploy:
    name: PyPI Deploy
    needs: [check, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
    - id: dist
      uses: casperdcl/deploy-pypi@v2
      with:
        requirements: twine setuptools wheel setuptools_scm[toml]
        build: true
        password: ${{ secrets.PYPI_TOKEN }}
        upload: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    - id: meta
      name: Changelog
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
        git log --pretty='format:%d%n- %s%n%b---' $(git tag --sort=v:refname | tail -n2 | head -n1)..HEAD > _CHANGES.md
    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        name: shtab ${{ steps.meta.outputs.tag }} beta
        body_path: _CHANGES.md
        draft: true
        files: |
          dist/${{ steps.dist.outputs.whl }}
